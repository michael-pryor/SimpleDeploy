#!/bin/sh -e
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

ENTITY_DIR="${DIR}/apps"

# Individual entity manipulated
if [ "$#" -eq 2 ]; then
   exec "$DIR/run" $@
   exit $?
fi

if [ "$#" -ne 1 ]; then
   echo "Must have one or two arguments e.g:"
   echo "${0} start governor <-- starts the governor"
   echo "${0} start <-- starts all processes"
   exit 1
fi

if [ ! -d "${LOG_DIR}" ]; then
   echo "LOG_DIR directory not found (${LOG_DIR})"
   exit 1
fi

ACTION="${1}"

callSelf() {
  "$0" $@
}

# Used in run script as well.
export ARCHIVING_LOCK="${LOG_DIR}/archiving_in_progress.lock"
finishArchiving() {
  echo "Finished archiving, restarting services and removing lock"
  callSelf start
  if [ -f "${ARCHIVING_LOCK}" ] ; then
    rm "${ARCHIVING_LOCK}"
  fi
}

case $ACTION in
tail)
  tail -f "${LOG_DIR}"/*.log
  exit 0
;;

archive_logs)
  echo "Archiving of log files in progress, temporarily stopped all jobs" > "${ARCHIVING_LOCK}"
  
  # In case another script is in progress already, try to wait for it to finish as lock will have no impact.
  sleep 1

  callSelf stop

  echo "Archiving log files"
  now=$(date +"%d_%m_%Y_%H_%M_%S")
  cd "${LOG_DIR}"
  {  
    tar czfv "logs_${now}.tgz" *.log
  } || {
    finishArchiving
    exit $?
  }
  cd -
  
  echo "Removing log files"
  rm "${LOG_DIR}"/*.log
  
  finishArchiving
  exit $?
;;

esac

HOSTNAME="$(hostname)"
for entityFile in "${ENTITY_DIR}/${HOSTNAME}"/*
do
  # Strip file path, now we just have e.g. governor.sh
  entityFile=${entityFile##*/}

  # Strip ending so now we just have governor.
  entityName=${entityFile%.*}
  
  "${DIR}/run" $@ "${entityName}"
done

case $ACTION in
audit_daily)
  # Append disk space stats to the end of the audit email.
  echo
  echo "Disk space stats"
  df -k --output=pcent ${DIR}
;;

esac
