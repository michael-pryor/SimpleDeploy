#!/bin/sh -e
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

while [[ $# > 0 ]]
do
key="$1"
case $key in
    -p|--package)
    SOURCE_FILE="$2"
    shift
    ;;
    -ho|--hosts)
    shift
    while ! echo "$1" | egrep '^-' > /dev/null 2>&1 && [ ! -z "$1" ]; do
      if [ -z "${HOST_LIST}" ]; then
        HOST_LIST="${1}"
      else
        HOST_LIST="${HOST_LIST} ${1}"
      fi
      shift
    done
    ;;
    -hf|--hosts_file)
    shift
    if [ ! -f "$1" ]; then
        echo "Could not find hosts file [${1}]"
        exit 1
    fi

    IFS=$'\r\n' GLOBIGNORE='*' command eval  "HOST_LIST=($(cat ${1}))"
    HOST_LIST=${HOST_LIST[@]}
    echo "Host list read from file is: ${HOST_LIST}"
    shift
    ;;
    -i|--install)
    SHOULD_INSTALL=1
    shift
    ;;
    -h|--help)
    echo "Usage: deploy -p package.tgz -ho host1.place host2.place -i"
    echo
    echo "Possible arguments:"
    echo "-p, --package: .tgz package to deploy"
    echo "-ho, --hosts: list of hosts to SCP package to"
    echo "-hf, --hosts_file: file containing one line per host name to SCP package to"
    echo "-i, --install: if present the package will be installed too"
    exit 0
    ;;
    *)
    echo "Unknown argument, use --help for usage"
    exit 0
    ;;
esac
done

destination_hosts=( ${HOST_LIST} )

PACKAGE_DIR="${DIR}/../builds"

# Pick the most recent package.
if [ -z ${SOURCE_FILE} ]; then
  # Pick the newest archive.
  SOURCE_FILE=$(ls -t ${PACKAGE_DIR} | head -1)
  echo "Package defaulted to newest packet: ${SOURCE_FILE}"
  if [ -z ${SOURCE_FILE} ]; then
    echo "No packages found"
    exit 1
  fi
fi

for host in "${destination_hosts[@]}"
do
  command="scp ${PACKAGE_DIR}/${SOURCE_FILE} pryormic@${host}:~/packages"
  echo $command
  $command

  if [ ! -z "${SHOULD_INSTALL}" ] && [ "${SHOULD_INSTALL}" -eq 1 ]; then
   ssh ${host} 'source ~/.bashrc; ${PROJECT_DIR}/bin/install' "${SOURCE_FILE}"
   echo "Installed [${SOURCE_FILE}] on host [${host}]"
 fi
done
